#include<bits/stdc++.h>
 
using namespace std;
int n, m,  u ,v,c,ans ;
vector <int > g [ 10004], g2[10004];
bool used [10004];
vector <int > org, comp ;
int colors[10005] ;
set<int> arr[100005];
void dfs ( int v )
{
    used[v] = true;
    for ( int to : g[v] )
    {
        if ( !used[to])
            dfs ( to) ;
    }
    org.push_back(v);
 
}
 
void dfs2 ( int v )
{
    used[v] = true;
    comp.push_back(v) ;
    for (int to : g2[v])
    {
        if (!used[to])
            dfs2(to) ;
    }
}
 
int main()
{
    //freopen("input.txt","r",stdin) ;
    cin >> n >> m ;
    for (int i =1 ;i<=m; i ++)
    {
        cin >> u >> v;
        g[u].push_back(v);
        g2[v].push_back(u);
    }
    for (int i = 1 ; i<=n ; i++)
    {
        if ( !used[i])
        {
            dfs(i);
        }
    }
 
    for (int i= 1; i <=n ; i ++)
        used[i] = false ;
    for (int i= 1 ; i <= n ; i++ )
    {
        int tmp = org [n-i];
        if (!used[tmp])
        {
            dfs2(tmp);
            c++;
            for (int x : comp )
                colors[x] = c ;
            comp.clear();
        }
    }
    for (int i =1 ;i <=n; i++)
    {
        for (int to :g[i])
        {
            if (colors[i] != colors[to])
            {
                arr[colors[i]].insert(colors[to]);
            }
        }
    }
    for (int i = 0 ; i<=c; i++ )
        ans+=arr[i].size();
    cout << ans;
 
    return 0;
}
